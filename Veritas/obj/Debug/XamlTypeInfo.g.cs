//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace Veritas
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::Veritas.Veritas_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::Veritas.Veritas_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.String fullName)
        {
            if(_provider == null)
            {
                _provider = new global::Veritas.Veritas_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace Veritas.Veritas_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            string standardName;
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            if(_xamlTypeToStandardName.TryGetValue(type, out standardName))
            {
                xamlType = GetXamlTypeByName(standardName);
            }
            else
            {
                xamlType = GetXamlTypeByName(type.FullName);
            }
            if(xamlType == null)
            {
                xamlType = CheckOtherMetadataProvidersForType(type);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (global::System.String.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypes.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            xamlType = CreateXamlType(typeName);
            if (xamlType == null)
            {
                xamlType = CheckOtherMetadataProvidersForName(typeName);
            }
            if (xamlType != null)
            {
                _xamlTypes.Add(typeName, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (global::System.String.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType> _xamlTypes = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();
        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember> _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();
        global::System.Collections.Generic.Dictionary<global::System.Type, string> _xamlTypeToStandardName = new global::System.Collections.Generic.Dictionary<global::System.Type, string>();

        private void AddToMapOfTypeToStandardName(global::System.Type t, global::System.String str)
        {
            if(!_xamlTypeToStandardName.ContainsKey(t))
            {
                _xamlTypeToStandardName.Add(t, str);
            }
        }

        private object Activate_0_DatePicker() { return new global::WinRTDatePicker.DatePicker(); }

        private object Activate_3_Calendar() { return new global::Veritas.Controls.Calendar(); }

        private object Activate_4_CpuStaple() { return new global::Veritas.Controls.CpuStaple(); }

        private object Activate_5_Chart() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart(); }

        private object Activate_6_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>(); }

        private object Activate_8_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>(); }

        private object Activate_9_Collection() { return new global::System.Collections.ObjectModel.Collection<global::System.Object>(); }

        private object Activate_10_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>(); }

        private object Activate_14_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>(); }

        private object Activate_15_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>(); }

        private object Activate_17_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>(); }

        private object Activate_19_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>(); }

        private object Activate_20_Legend() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Legend(); }

        private object Activate_21_HeaderedItemsControl() { return new global::WinRTXamlToolkit.Controls.HeaderedItemsControl(); }

        private object Activate_22_LineSeries() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries(); }

        private object Activate_34_LineChart() { return new global::Veritas.Controls.Charts.LineChart(); }

        private object Activate_35_ResourceDictionaryCollection() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ResourceDictionaryCollection(); }

        private object Activate_36_Title() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Title(); }

        private object Activate_37_PieSeries() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries(); }

        private object Activate_38_PieChart() { return new global::Veritas.Controls.Charts.PieChart(); }

        private object Activate_39_HeaderControl() { return new global::Veritas.Controls.HeaderControl(); }

        private object Activate_41_MapsControl() { return new global::Veritas.Controls.MapsControl(); }

        private object Activate_42_NetworkInfo() { return new global::Veritas.Controls.NetworkInfo(); }

        private object Activate_43_NodeControl() { return new global::Veritas.Controls.NodeControl(); }

        private object Activate_44_tempController() { return new global::Veritas.Controls.tempController(); }

        private object Activate_45_UptimeControl() { return new global::Veritas.Controls.UptimeControl(); }

        private object Activate_46_MainPage() { return new global::Veritas.MainPage(); }

        private object Activate_47_LondonHistory() { return new global::Veritas.Pages.London.LondonHistory(); }

        private object Activate_48_LondonServer() { return new global::Veritas.Pages.London.LondonServer(); }

        private object Activate_49_PLC() { return new global::Veritas.Pages.PLC.PLC(); }

        private object Activate_50_PLCHistory() { return new global::Veritas.Pages.PLC.PLCHistory(); }

        private object Activate_51_thnRouter() { return new global::Veritas.Pages.TrollhättanRouter.thnRouter(); }

        private object Activate_52_ThnRouterHistory() { return new global::Veritas.Pages.TrollhättanRouter.ThnRouterHistory(); }

        private object Activate_53_ThnHistory() { return new global::Veritas.Pages.TrollhättanServer.ThnHistory(); }

        private object Activate_54_thnServer() { return new global::Veritas.Pages.TrollhättanServer.thnServer(); }

        private void VectorAdd_6_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries)item;
            collection.Add(newItem);
        }

        private void VectorAdd_8_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }

        private void VectorAdd_9_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }

        private void VectorAdd_10_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)item;
            collection.Add(newItem);
        }

        private void VectorAdd_14_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener)item;
            collection.Add(newItem);
        }

        private void VectorAdd_15_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener)item;
            collection.Add(newItem);
        }

        private void VectorAdd_17_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)item;
            collection.Add(newItem);
        }

        private void VectorAdd_18_ReadOnlyCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)item;
            collection.Add(newItem);
        }

        private void VectorAdd_19_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.ResourceDictionary>)instance;
            var newItem = (global::Windows.UI.Xaml.ResourceDictionary)item;
            collection.Add(newItem);
        }

        private void VectorAdd_35_ResourceDictionaryCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.ResourceDictionary>)instance;
            var newItem = (global::Windows.UI.Xaml.ResourceDictionary)item;
            collection.Add(newItem);
        }


        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(string typeName)
        {
            global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::Veritas.Veritas_XamlTypeInfo.XamlUserType userType;

            switch (typeName)
            {
            case "Windows.UI.Xaml.Controls.Control":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Control));
                break;

            case "Object":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Object));
                break;

            case "String":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.String));
                break;

            case "Windows.UI.Xaml.Controls.UserControl":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.UserControl));
                break;

            case "Windows.UI.Xaml.Style":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Style));
                break;

            case "Windows.UI.Xaml.ResourceDictionary":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.ResourceDictionary));
                break;

            case "Windows.UI.Xaml.Controls.ItemsControl":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.ItemsControl));
                break;

            case "Windows.UI.Xaml.Visibility":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Visibility));
                break;

            case "Windows.UI.Xaml.DataTemplate":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.DataTemplate));
                break;

            case "Windows.UI.Xaml.Data.Binding":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Data.Binding));
                break;

            case "Boolean":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Boolean));
                break;

            case "Windows.UI.Xaml.Media.PointCollection":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Media.PointCollection));
                break;

            case "Windows.UI.Xaml.Media.Animation.EasingFunctionBase":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Media.Animation.EasingFunctionBase));
                break;

            case "Int32":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::System.Int32));
                break;

            case "Windows.UI.Xaml.Controls.ContentControl":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.ContentControl));
                break;

            case "Windows.UI.Xaml.Controls.Page":
                xamlType = new global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType(typeName, typeof(global::Windows.UI.Xaml.Controls.Page));
                break;

            case "WinRTDatePicker.DatePicker":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTDatePicker.DatePicker), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_0_DatePicker;
                userType.AddMemberName("SelectedDate");
                userType.AddMemberName("DayOptionFormat");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("MonthOptionFormat");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                xamlType = userType;
                break;

            case "System.DateTime":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.DateTime), GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case "System.ValueType":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.ValueType), GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case "Veritas.Controls.Calendar":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.Calendar), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_3_Calendar;
                xamlType = userType;
                break;

            case "Veritas.Controls.CpuStaple":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.CpuStaple), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_4_CpuStaple;
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_5_Chart;
                userType.SetContentPropertyName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Series");
                userType.AddMemberName("Series");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>),
                                                   "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>");
                userType.AddMemberName("LegendStyle");
                userType.AddMemberName("Axes");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>),
                                                   "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                userType.AddMemberName("ActualAxes");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ReadOnlyCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>),
                                                   "System.Collections.ObjectModel.ReadOnlyCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                userType.AddMemberName("ChartAreaStyle");
                userType.AddMemberName("LegendItems");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::System.Object>),
                                                   "System.Collections.ObjectModel.Collection<Object>");
                userType.AddMemberName("LegendTitle");
                AddToMapOfTypeToStandardName(typeof(global::System.Object),
                                                   "Object");
                userType.AddMemberName("PlotAreaStyle");
                userType.AddMemberName("Palette");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>),
                                                   "System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>");
                userType.AddMemberName("Title");
                AddToMapOfTypeToStandardName(typeof(global::System.Object),
                                                   "Object");
                userType.AddMemberName("TitleStyle");
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>),
                                                   "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>");
                userType.Activator = Activate_6_Collection;
                userType.CollectionAdd = VectorAdd_6_Collection;
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries), null);
                userType.AddMemberName("LegendItems");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>),
                                                   "System.Collections.ObjectModel.ObservableCollection<Object>");
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<Object>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<Object>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>),
                                                   "System.Collections.ObjectModel.ObservableCollection<Object>");
                userType.Activator = Activate_8_ObservableCollection;
                userType.CollectionAdd = VectorAdd_8_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<Object>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::System.Object>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::System.Object>),
                                                   "System.Collections.ObjectModel.Collection<Object>");
                userType.Activator = Activate_9_Collection;
                userType.CollectionAdd = VectorAdd_9_Collection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>),
                                                   "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                userType.Activator = Activate_10_Collection;
                userType.CollectionAdd = VectorAdd_10_Collection;
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis), null);
                userType.AddMemberName("Orientation");
                userType.AddMemberName("RegisteredListeners");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>),
                                                   "System.Collections.ObjectModel.ObservableCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>");
                userType.AddMemberName("DependentAxes");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>),
                                                   "System.Collections.ObjectModel.ObservableCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation), GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation.None);
                userType.AddEnumValue("X", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation.X);
                userType.AddEnumValue("Y", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation.Y);
                xamlType = userType;
                break;

            case "System.Enum":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Enum), GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>),
                                                   "System.Collections.ObjectModel.ObservableCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>");
                userType.Activator = Activate_14_ObservableCollection;
                userType.CollectionAdd = VectorAdd_14_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>),
                                                   "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>");
                userType.Activator = Activate_15_Collection;
                userType.CollectionAdd = VectorAdd_15_Collection;
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener), null);
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ObservableCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>), GetXamlTypeByName("System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>),
                                                   "System.Collections.ObjectModel.ObservableCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                userType.Activator = Activate_17_ObservableCollection;
                userType.CollectionAdd = VectorAdd_17_ObservableCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.ReadOnlyCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.ReadOnlyCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ReadOnlyCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>),
                                                   "System.Collections.ObjectModel.ReadOnlyCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                userType.CollectionAdd = VectorAdd_18_ReadOnlyCollection;
                xamlType = userType;
                break;

            case "System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>), GetXamlTypeByName("Object"));
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>),
                                                   "System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>");
                userType.Activator = Activate_19_Collection;
                userType.CollectionAdd = VectorAdd_19_Collection;
                userType.AddMemberName("Count");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Legend":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Legend), GetXamlTypeByName("WinRTXamlToolkit.Controls.HeaderedItemsControl"));
                userType.Activator = Activate_20_Legend;
                userType.AddMemberName("TitleStyle");
                userType.AddMemberName("ContentVisibility");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.HeaderedItemsControl":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.HeaderedItemsControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_21_HeaderedItemsControl;
                userType.AddMemberName("Header");
                AddToMapOfTypeToStandardName(typeof(global::System.Object),
                                                   "Object");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("ItemContainerStyle");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries), GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>"));
                userType.Activator = Activate_22_LineSeries;
                userType.AddMemberName("Points");
                userType.AddMemberName("PolylineStyle");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>), GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes"));
                AddToMapOfTypeToStandardName(typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>),
                                                   "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                userType.AddMemberName("DependentRangeAxis");
                userType.AddMemberName("IndependentAxis");
                userType.AddMemberName("ActualIndependentAxis");
                userType.AddMemberName("ActualDependentRangeAxis");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes), GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeriesWithAxes"));
                userType.AddMemberName("GlobalSeriesIndex");
                AddToMapOfTypeToStandardName(typeof(global::System.Nullable<global::System.Int32>),
                                                   "System.Nullable<Int32>");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeriesWithAxes":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeriesWithAxes), GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries"));
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries), GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Series"));
                userType.AddMemberName("IndependentValueBinding");
                userType.AddMemberName("DependentValueBinding");
                userType.AddMemberName("IsSelectionEnabled");
                AddToMapOfTypeToStandardName(typeof(global::System.Boolean),
                                                   "Boolean");
                userType.AddMemberName("DependentValuePath");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("IndependentValuePath");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("AnimationSequence");
                userType.AddMemberName("TransitionEasingFunction");
                userType.AddMemberName("SelectedItem");
                AddToMapOfTypeToStandardName(typeof(global::System.Object),
                                                   "Object");
                userType.AddMemberName("DataPointStyle");
                userType.AddMemberName("LegendItemStyle");
                userType.AddMemberName("TransitionDuration");
                AddToMapOfTypeToStandardName(typeof(global::System.TimeSpan),
                                                   "TimeSpan");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Series":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series), GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("Title");
                AddToMapOfTypeToStandardName(typeof(global::System.Object),
                                                   "Object");
                userType.AddMemberName("SeriesHost");
                userType.AddMemberName("LegendItems");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>),
                                                   "System.Collections.ObjectModel.ObservableCollection<Object>");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis), null);
                xamlType = userType;
                break;

            case "System.Nullable<Int32>":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Nullable<global::System.Int32>), GetXamlTypeByName("System.ValueType"));
                AddToMapOfTypeToStandardName(typeof(global::System.Nullable<global::System.Int32>),
                                                   "System.Nullable<Int32>");
                xamlType = userType;
                break;

            case "System.Collections.IEnumerable":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.Collections.IEnumerable), null);
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence), GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Simultaneous", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence.Simultaneous);
                userType.AddEnumValue("FirstToLast", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence.FirstToLast);
                userType.AddEnumValue("LastToFirst", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence.LastToFirst);
                xamlType = userType;
                break;

            case "TimeSpan":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::System.TimeSpan), GetXamlTypeByName("System.ValueType"));
                AddToMapOfTypeToStandardName(typeof(global::System.TimeSpan),
                                                   "TimeSpan");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost), null);
                xamlType = userType;
                break;

            case "Veritas.Controls.Charts.LineChart":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.Charts.LineChart), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_34_LineChart;
                userType.AddMemberName("MaxDataPoints");
                AddToMapOfTypeToStandardName(typeof(global::System.Int32),
                                                   "Int32");
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ResourceDictionaryCollection":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ResourceDictionaryCollection), GetXamlTypeByName("System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>"));
                userType.Activator = Activate_35_ResourceDictionaryCollection;
                userType.CollectionAdd = VectorAdd_35_ResourceDictionaryCollection;
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Title":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Title), GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_36_Title;
                xamlType = userType;
                break;

            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries), GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries"));
                userType.Activator = Activate_37_PieSeries;
                userType.AddMemberName("Palette");
                AddToMapOfTypeToStandardName(typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>),
                                                   "System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>");
                xamlType = userType;
                break;

            case "Veritas.Controls.Charts.PieChart":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.Charts.PieChart), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_38_PieChart;
                xamlType = userType;
                break;

            case "Veritas.Controls.HeaderControl":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.HeaderControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_39_HeaderControl;
                userType.AddMemberName("ServerName");
                AddToMapOfTypeToStandardName(typeof(global::System.String),
                                                   "String");
                userType.AddMemberName("Foreground");
                xamlType = userType;
                break;

            case "Windows.UI.Color":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Windows.UI.Color), GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case "Veritas.Controls.MapsControl":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.MapsControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_41_MapsControl;
                xamlType = userType;
                break;

            case "Veritas.Controls.NetworkInfo":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.NetworkInfo), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_42_NetworkInfo;
                xamlType = userType;
                break;

            case "Veritas.Controls.NodeControl":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.NodeControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_43_NodeControl;
                xamlType = userType;
                break;

            case "Veritas.Controls.tempController":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.tempController), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_44_tempController;
                xamlType = userType;
                break;

            case "Veritas.Controls.UptimeControl":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Controls.UptimeControl), GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_45_UptimeControl;
                xamlType = userType;
                break;

            case "Veritas.MainPage":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.MainPage), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_MainPage;
                xamlType = userType;
                break;

            case "Veritas.Pages.London.LondonHistory":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Pages.London.LondonHistory), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_47_LondonHistory;
                xamlType = userType;
                break;

            case "Veritas.Pages.London.LondonServer":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Pages.London.LondonServer), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_48_LondonServer;
                xamlType = userType;
                break;

            case "Veritas.Pages.PLC.PLC":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Pages.PLC.PLC), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_49_PLC;
                xamlType = userType;
                break;

            case "Veritas.Pages.PLC.PLCHistory":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Pages.PLC.PLCHistory), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_50_PLCHistory;
                xamlType = userType;
                break;

            case "Veritas.Pages.TrollhättanRouter.thnRouter":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Pages.TrollhättanRouter.thnRouter), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_51_thnRouter;
                xamlType = userType;
                break;

            case "Veritas.Pages.TrollhättanRouter.ThnRouterHistory":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Pages.TrollhättanRouter.ThnRouterHistory), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_52_ThnRouterHistory;
                xamlType = userType;
                break;

            case "Veritas.Pages.TrollhättanServer.ThnHistory":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Pages.TrollhättanServer.ThnHistory), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_ThnHistory;
                xamlType = userType;
                break;

            case "Veritas.Pages.TrollhättanServer.thnServer":
                userType = new global::Veritas.Veritas_XamlTypeInfo.XamlUserType(this, typeName, typeof(global::Veritas.Pages.TrollhättanServer.thnServer), GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_54_thnServer;
                xamlType = userType;
                break;

            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    _otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::WinRTDatePicker.WinRTDatePicker_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::WinRTXamlToolkit.Controls.DataVisualization.WinRTXamlToolkit_Controls_DataVisualization_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                    provider = new global::WinRTXamlToolkit.WinRTXamlToolkit_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    _otherProviders.Add(provider); 
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    return xamlType;
                }
            }
            return null;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    return xamlType;
                }
            }
            return null;
        }

        private object get_0_DatePicker_SelectedDate(object instance)
        {
            var that = (global::WinRTDatePicker.DatePicker)instance;
            return that.SelectedDate;
        }
        private void set_0_DatePicker_SelectedDate(object instance, object Value)
        {
            var that = (global::WinRTDatePicker.DatePicker)instance;
            that.SelectedDate = (global::System.DateTime)Value;
        }
        private object get_1_DatePicker_DayOptionFormat(object instance)
        {
            var that = (global::WinRTDatePicker.DatePicker)instance;
            return that.DayOptionFormat;
        }
        private void set_1_DatePicker_DayOptionFormat(object instance, object Value)
        {
            var that = (global::WinRTDatePicker.DatePicker)instance;
            that.DayOptionFormat = (global::System.String)Value;
        }
        private object get_2_DatePicker_MonthOptionFormat(object instance)
        {
            var that = (global::WinRTDatePicker.DatePicker)instance;
            return that.MonthOptionFormat;
        }
        private void set_2_DatePicker_MonthOptionFormat(object instance, object Value)
        {
            var that = (global::WinRTDatePicker.DatePicker)instance;
            that.MonthOptionFormat = (global::System.String)Value;
        }
        private object get_3_Chart_Series(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.Series;
        }
        private void set_3_Chart_Series(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.Series = (global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>)Value;
        }
        private object get_4_ISeries_LegendItems(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries)instance;
            return that.LegendItems;
        }
        private object get_5_Chart_LegendStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.LegendStyle;
        }
        private void set_5_Chart_LegendStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.LegendStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_6_Chart_Axes(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.Axes;
        }
        private void set_6_Chart_Axes(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.Axes = (global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>)Value;
        }
        private object get_7_IAxis_Orientation(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)instance;
            return that.Orientation;
        }
        private void set_7_IAxis_Orientation(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)instance;
            that.Orientation = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation)Value;
        }
        private object get_8_IAxis_RegisteredListeners(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)instance;
            return that.RegisteredListeners;
        }
        private object get_9_IAxis_DependentAxes(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)instance;
            return that.DependentAxes;
        }
        private object get_10_Chart_ActualAxes(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.ActualAxes;
        }
        private object get_11_Chart_ChartAreaStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.ChartAreaStyle;
        }
        private void set_11_Chart_ChartAreaStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.ChartAreaStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_12_Chart_LegendItems(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.LegendItems;
        }
        private object get_13_Chart_LegendTitle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.LegendTitle;
        }
        private void set_13_Chart_LegendTitle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.LegendTitle = (global::System.Object)Value;
        }
        private object get_14_Chart_PlotAreaStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.PlotAreaStyle;
        }
        private void set_14_Chart_PlotAreaStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.PlotAreaStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_15_Chart_Palette(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.Palette;
        }
        private void set_15_Chart_Palette(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.Palette = (global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>)Value;
        }
        private object get_16_Chart_Title(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.Title;
        }
        private void set_16_Chart_Title(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.Title = (global::System.Object)Value;
        }
        private object get_17_Chart_TitleStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.TitleStyle;
        }
        private void set_17_Chart_TitleStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.TitleStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_18_Legend_TitleStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Legend)instance;
            return that.TitleStyle;
        }
        private void set_18_Legend_TitleStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Legend)instance;
            that.TitleStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_19_Legend_ContentVisibility(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Legend)instance;
            return that.ContentVisibility;
        }
        private object get_20_HeaderedItemsControl_Header(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            return that.Header;
        }
        private void set_20_HeaderedItemsControl_Header(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_21_HeaderedItemsControl_HeaderTemplate(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            return that.HeaderTemplate;
        }
        private void set_21_HeaderedItemsControl_HeaderTemplate(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_22_HeaderedItemsControl_ItemContainerStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            return that.ItemContainerStyle;
        }
        private void set_22_HeaderedItemsControl_ItemContainerStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            that.ItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_23_Series_Title(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            return that.Title;
        }
        private void set_23_Series_Title(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            that.Title = (global::System.Object)Value;
        }
        private object get_24_DataPointSeries_IndependentValueBinding(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.IndependentValueBinding;
        }
        private void set_24_DataPointSeries_IndependentValueBinding(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.IndependentValueBinding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_25_DataPointSeries_DependentValueBinding(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.DependentValueBinding;
        }
        private void set_25_DataPointSeries_DependentValueBinding(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.DependentValueBinding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_26_DataPointSeries_IsSelectionEnabled(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.IsSelectionEnabled;
        }
        private void set_26_DataPointSeries_IsSelectionEnabled(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.IsSelectionEnabled = (global::System.Boolean)Value;
        }
        private object get_27_LineSeries_Points(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)instance;
            return that.Points;
        }
        private object get_28_LineSeries_PolylineStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)instance;
            return that.PolylineStyle;
        }
        private void set_28_LineSeries_PolylineStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)instance;
            that.PolylineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_29_LineAreaBaseSeries_DependentRangeAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            return that.DependentRangeAxis;
        }
        private void set_29_LineAreaBaseSeries_DependentRangeAxis(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            that.DependentRangeAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis)Value;
        }
        private object get_30_LineAreaBaseSeries_IndependentAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            return that.IndependentAxis;
        }
        private void set_30_LineAreaBaseSeries_IndependentAxis(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            that.IndependentAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)Value;
        }
        private object get_31_LineAreaBaseSeries_ActualIndependentAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            return that.ActualIndependentAxis;
        }
        private object get_32_LineAreaBaseSeries_ActualDependentRangeAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            return that.ActualDependentRangeAxis;
        }
        private object get_33_DataPointSingleSeriesWithAxes_GlobalSeriesIndex(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes)instance;
            return that.GlobalSeriesIndex;
        }
        private object get_34_DataPointSeries_DependentValuePath(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.DependentValuePath;
        }
        private void set_34_DataPointSeries_DependentValuePath(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.DependentValuePath = (global::System.String)Value;
        }
        private object get_35_DataPointSeries_IndependentValuePath(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.IndependentValuePath;
        }
        private void set_35_DataPointSeries_IndependentValuePath(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.IndependentValuePath = (global::System.String)Value;
        }
        private object get_36_DataPointSeries_ItemsSource(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.ItemsSource;
        }
        private void set_36_DataPointSeries_ItemsSource(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_37_DataPointSeries_AnimationSequence(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.AnimationSequence;
        }
        private void set_37_DataPointSeries_AnimationSequence(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.AnimationSequence = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence)Value;
        }
        private object get_38_DataPointSeries_TransitionEasingFunction(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.TransitionEasingFunction;
        }
        private void set_38_DataPointSeries_TransitionEasingFunction(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.TransitionEasingFunction = (global::Windows.UI.Xaml.Media.Animation.EasingFunctionBase)Value;
        }
        private object get_39_DataPointSeries_SelectedItem(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.SelectedItem;
        }
        private void set_39_DataPointSeries_SelectedItem(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_40_DataPointSeries_DataPointStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.DataPointStyle;
        }
        private void set_40_DataPointSeries_DataPointStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.DataPointStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_41_DataPointSeries_LegendItemStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.LegendItemStyle;
        }
        private void set_41_DataPointSeries_LegendItemStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.LegendItemStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_42_DataPointSeries_TransitionDuration(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.TransitionDuration;
        }
        private void set_42_DataPointSeries_TransitionDuration(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.TransitionDuration = (global::System.TimeSpan)Value;
        }
        private object get_43_Series_SeriesHost(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            return that.SeriesHost;
        }
        private void set_43_Series_SeriesHost(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            that.SeriesHost = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost)Value;
        }
        private object get_44_Series_LegendItems(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            return that.LegendItems;
        }
        private object get_45_LineChart_MaxDataPoints(object instance)
        {
            var that = (global::Veritas.Controls.Charts.LineChart)instance;
            return that.MaxDataPoints;
        }
        private void set_45_LineChart_MaxDataPoints(object instance, object Value)
        {
            var that = (global::Veritas.Controls.Charts.LineChart)instance;
            that.MaxDataPoints = (global::System.Int32)Value;
        }
        private object get_46_Collection_Count(object instance)
        {
            var that = (global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>)instance;
            return that.Count;
        }
        private object get_47_PieSeries_Palette(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries)instance;
            return that.Palette;
        }
        private void set_47_PieSeries_Palette(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries)instance;
            that.Palette = (global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>)Value;
        }
        private object get_48_HeaderControl_ServerName(object instance)
        {
            var that = (global::Veritas.Controls.HeaderControl)instance;
            return that.ServerName;
        }
        private void set_48_HeaderControl_ServerName(object instance, object Value)
        {
            var that = (global::Veritas.Controls.HeaderControl)instance;
            that.ServerName = (global::System.String)Value;
        }
        private object get_49_HeaderControl_Foreground(object instance)
        {
            var that = (global::Veritas.Controls.HeaderControl)instance;
            return that.Foreground;
        }
        private void set_49_HeaderControl_Foreground(object instance, object Value)
        {
            var that = (global::Veritas.Controls.HeaderControl)instance;
            that.Foreground = (global::Windows.UI.Color)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::Veritas.Veritas_XamlTypeInfo.XamlMember xamlMember = null;
            global::Veritas.Veritas_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "WinRTDatePicker.DatePicker.SelectedDate":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTDatePicker.DatePicker");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "SelectedDate", "System.DateTime");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_DatePicker_SelectedDate;
                xamlMember.Setter = set_0_DatePicker_SelectedDate;
                break;
            case "WinRTDatePicker.DatePicker.DayOptionFormat":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTDatePicker.DatePicker");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "DayOptionFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_DatePicker_DayOptionFormat;
                xamlMember.Setter = set_1_DatePicker_DayOptionFormat;
                break;
            case "WinRTDatePicker.DatePicker.MonthOptionFormat":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTDatePicker.DatePicker");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "MonthOptionFormat", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_DatePicker_MonthOptionFormat;
                xamlMember.Setter = set_2_DatePicker_MonthOptionFormat;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Series":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Series", "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>");
                xamlMember.Getter = get_3_Chart_Series;
                xamlMember.Setter = set_3_Chart_Series;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries.LegendItems":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "LegendItems", "System.Collections.ObjectModel.ObservableCollection<Object>");
                xamlMember.Getter = get_4_ISeries_LegendItems;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.LegendStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "LegendStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_Chart_LegendStyle;
                xamlMember.Setter = set_5_Chart_LegendStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Axes":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Axes", "System.Collections.ObjectModel.Collection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                xamlMember.Getter = get_6_Chart_Axes;
                xamlMember.Setter = set_6_Chart_Axes;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis.Orientation":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Orientation", "WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation");
                xamlMember.Getter = get_7_IAxis_Orientation;
                xamlMember.Setter = set_7_IAxis_Orientation;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis.RegisteredListeners":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "RegisteredListeners", "System.Collections.ObjectModel.ObservableCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>");
                xamlMember.Getter = get_8_IAxis_RegisteredListeners;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis.DependentAxes":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "DependentAxes", "System.Collections.ObjectModel.ObservableCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                xamlMember.Getter = get_9_IAxis_DependentAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.ActualAxes":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "ActualAxes", "System.Collections.ObjectModel.ReadOnlyCollection<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                xamlMember.Getter = get_10_Chart_ActualAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.ChartAreaStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "ChartAreaStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_Chart_ChartAreaStyle;
                xamlMember.Setter = set_11_Chart_ChartAreaStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.LegendItems":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "LegendItems", "System.Collections.ObjectModel.Collection<Object>");
                xamlMember.Getter = get_12_Chart_LegendItems;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.LegendTitle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "LegendTitle", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_Chart_LegendTitle;
                xamlMember.Setter = set_13_Chart_LegendTitle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.PlotAreaStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "PlotAreaStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_Chart_PlotAreaStyle;
                xamlMember.Setter = set_14_Chart_PlotAreaStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Palette":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Palette", "System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_Chart_Palette;
                xamlMember.Setter = set_15_Chart_Palette;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Title":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Title", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_Chart_Title;
                xamlMember.Setter = set_16_Chart_Title;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.TitleStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "TitleStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_Chart_TitleStyle;
                xamlMember.Setter = set_17_Chart_TitleStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Legend.TitleStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Legend");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "TitleStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_Legend_TitleStyle;
                xamlMember.Setter = set_18_Legend_TitleStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Legend.ContentVisibility":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Legend");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "ContentVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_Legend_ContentVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.HeaderedItemsControl.Header":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.HeaderedItemsControl");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_HeaderedItemsControl_Header;
                xamlMember.Setter = set_20_HeaderedItemsControl_Header;
                break;
            case "WinRTXamlToolkit.Controls.HeaderedItemsControl.HeaderTemplate":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.HeaderedItemsControl");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_HeaderedItemsControl_HeaderTemplate;
                xamlMember.Setter = set_21_HeaderedItemsControl_HeaderTemplate;
                break;
            case "WinRTXamlToolkit.Controls.HeaderedItemsControl.ItemContainerStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.HeaderedItemsControl");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "ItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_HeaderedItemsControl_ItemContainerStyle;
                xamlMember.Setter = set_22_HeaderedItemsControl_ItemContainerStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Series.Title":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Series");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Title", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_Series_Title;
                xamlMember.Setter = set_23_Series_Title;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.IndependentValueBinding":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "IndependentValueBinding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_24_DataPointSeries_IndependentValueBinding;
                xamlMember.Setter = set_24_DataPointSeries_IndependentValueBinding;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.DependentValueBinding":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "DependentValueBinding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_25_DataPointSeries_DependentValueBinding;
                xamlMember.Setter = set_25_DataPointSeries_DependentValueBinding;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.IsSelectionEnabled":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "IsSelectionEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_DataPointSeries_IsSelectionEnabled;
                xamlMember.Setter = set_26_DataPointSeries_IsSelectionEnabled;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries.Points":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Points", "Windows.UI.Xaml.Media.PointCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_LineSeries_Points;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries.PolylineStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "PolylineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_LineSeries_PolylineStyle;
                xamlMember.Setter = set_28_LineSeries_PolylineStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>.DependentRangeAxis":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "DependentRangeAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_LineAreaBaseSeries_DependentRangeAxis;
                xamlMember.Setter = set_29_LineAreaBaseSeries_DependentRangeAxis;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>.IndependentAxis":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "IndependentAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_LineAreaBaseSeries_IndependentAxis;
                xamlMember.Setter = set_30_LineAreaBaseSeries_IndependentAxis;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>.ActualIndependentAxis":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "ActualIndependentAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember.Getter = get_31_LineAreaBaseSeries_ActualIndependentAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>.ActualDependentRangeAxis":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "ActualDependentRangeAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis");
                xamlMember.Getter = get_32_LineAreaBaseSeries_ActualDependentRangeAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GlobalSeriesIndex":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "GlobalSeriesIndex", "System.Nullable<Int32>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_DataPointSingleSeriesWithAxes_GlobalSeriesIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.DependentValuePath":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "DependentValuePath", "String");
                xamlMember.Getter = get_34_DataPointSeries_DependentValuePath;
                xamlMember.Setter = set_34_DataPointSeries_DependentValuePath;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.IndependentValuePath":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "IndependentValuePath", "String");
                xamlMember.Getter = get_35_DataPointSeries_IndependentValuePath;
                xamlMember.Setter = set_35_DataPointSeries_IndependentValuePath;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.ItemsSource":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_DataPointSeries_ItemsSource;
                xamlMember.Setter = set_36_DataPointSeries_ItemsSource;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.AnimationSequence":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "AnimationSequence", "WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_DataPointSeries_AnimationSequence;
                xamlMember.Setter = set_37_DataPointSeries_AnimationSequence;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.TransitionEasingFunction":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "TransitionEasingFunction", "Windows.UI.Xaml.Media.Animation.EasingFunctionBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_DataPointSeries_TransitionEasingFunction;
                xamlMember.Setter = set_38_DataPointSeries_TransitionEasingFunction;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.SelectedItem":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_DataPointSeries_SelectedItem;
                xamlMember.Setter = set_39_DataPointSeries_SelectedItem;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.DataPointStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "DataPointStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_DataPointSeries_DataPointStyle;
                xamlMember.Setter = set_40_DataPointSeries_DataPointStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.LegendItemStyle":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "LegendItemStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_DataPointSeries_LegendItemStyle;
                xamlMember.Setter = set_41_DataPointSeries_LegendItemStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.TransitionDuration":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "TransitionDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_DataPointSeries_TransitionDuration;
                xamlMember.Setter = set_42_DataPointSeries_TransitionDuration;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Series.SeriesHost":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Series");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "SeriesHost", "WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost");
                xamlMember.Getter = get_43_Series_SeriesHost;
                xamlMember.Setter = set_43_Series_SeriesHost;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Series.LegendItems":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Series");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "LegendItems", "System.Collections.ObjectModel.ObservableCollection<Object>");
                xamlMember.Getter = get_44_Series_LegendItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Veritas.Controls.Charts.LineChart.MaxDataPoints":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Veritas.Controls.Charts.LineChart");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "MaxDataPoints", "Int32");
                xamlMember.Getter = get_45_LineChart_MaxDataPoints;
                xamlMember.Setter = set_45_LineChart_MaxDataPoints;
                break;
            case "System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>.Count":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Count", "Int32");
                xamlMember.Getter = get_46_Collection_Count;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries.Palette":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Palette", "System.Collections.ObjectModel.Collection<Windows.UI.Xaml.ResourceDictionary>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_PieSeries_Palette;
                xamlMember.Setter = set_47_PieSeries_Palette;
                break;
            case "Veritas.Controls.HeaderControl.ServerName":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Veritas.Controls.HeaderControl");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "ServerName", "String");
                xamlMember.Getter = get_48_HeaderControl_ServerName;
                xamlMember.Setter = set_48_HeaderControl_ServerName;
                break;
            case "Veritas.Controls.HeaderControl.Foreground":
                userType = (global::Veritas.Veritas_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Veritas.Controls.HeaderControl");
                xamlMember = new global::Veritas.Veritas_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Color");
                xamlMember.Getter = get_49_HeaderControl_Foreground;
                xamlMember.Setter = set_49_HeaderControl_Foreground;
                break;
            }
            return xamlMember;
        }

    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(global::System.String input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::Veritas.Veritas_XamlTypeInfo.XamlSystemBaseType
    {
        global::Veritas.Veritas_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::Veritas.Veritas_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public global::System.Object CreateFromString(global::System.String input)
        {
            if (_enumValues != null)
            {
                global::System.Int32 value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    global::System.Int32 enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( global::System.String.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::Veritas.Veritas_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::Veritas.Veritas_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(global::System.String targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


